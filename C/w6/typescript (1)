Script started on Wed 23 Oct 2013 04:37:12 PM EDT
jgchoi@matrix:~/100/workshop6> whom[Kami
jgchoi
jgchoi@matrix:~/100/workshop6> cat w6.c
/*
 * Course Code 		- BTP100
 * Assignment Number	- Workshop6
 * Name			- Jung Geon Choi
 * File name		- w6
 * Due date		- Oct.29, 2013
 * Game of Dice : You win if you get your sought with less throw!
 */

#include <stdio.h>
#include <stdlib.h>
#include <time.h>

//prototypes
int getnum();
int throw(int trial);

int main(void)
{
	//valuables
	int goal = 0, trial = 0, dice_val = 0;

	//program title
	printf("Game of Dice\n"
	       "============\n");

	//Get number between 2~12
	goal = getnum();

	//Rolling
	do
		{
		trial++;
		dice_val = throw(trial);
		sleep(1);
		}
	while(dice_val < goal);

	//End program with output
	printf("You got your total in %d throws!\n", trial);
	return 0;
}

//Output 2 Dice value, return total value
int throw(int trial)
{
		//rand seeding by time
		srand(time(NULL));
		
		//valuables
		int dice1=0, dice2=0, max=6, min=1, total=0;
		
		//dice
		dice1 = min + (rand()%(max+1-min));
		dice2 = min + (rand()%(max+1-min));
			
		//total to return
		total = dice1 + dice2;
		
		//output
		printf("Result of throw  %2d : %d + %d \n", trial, dice1, dice2);

	return total;
}

//Get integer between 2~12 and invalid other inputs
int getnum()
{
	//valuable
	int num = 0, r = 0;
	int range_min = 2, range_max = 12;
	char check = 0;

	do
		{
		printf("Enter total sought : ");
		
		r = scanf("%d%c", &num, &check);
		
		//Only accept integer input value between 2~12 otherwise return 0
		if(r==2 && num>=range_min && num<=range_max && check=='\n');
		else
			{
			num = 0;
			printf("*** Invalid Input. Try Again ***\n");
			if(check!='\n' || r==0) // in case of trailing char input or non \n, clear buffer
				while(getchar()!='\n');
			}
		}
	while(num==0);
	
	return num;
}
jgchoi@matrix:~/100/workshop6> cc w6.c
jgchoi@matrix:~/100/workshop6> a.out
Game of Dice
============
Enter total sought : 13
*** Invalid Input. Try Again ***
Enter total sought : 11
Result of throw   1 : 6 + 6 
You got your total in 1 throws!
jgchoi@matrix:~/100/workshop6> a.out
Game of Dice
============
Enter total sought : 11
Result of throw   1 : 6 + 2 
Result of throw   2 : 6 + 4 
Result of throw   3 : 1 + 4 
Result of throw   4 : 2 + 6 
Result of throw   5 : 6 + 4 
Result of throw   6 : 1 + 6 
Result of throw   7 : 2 + 4 
Result of throw   8 : 3 + 6 
Result of throw   9 : 5 + 4 
Result of throw  10 : 6 + 2 
Result of throw  11 : 1 + 5 
Result of throw  12 : 1 + 5 
Result of throw  13 : 5 + 2 
Result of throw  14 : 5 + 4 
Result of throw  15 : 5 + 2 
Result of throw  16 : 3 + 6 
Result of throw  17 : 4 + 5 
Result of throw  18 : 5 + 4 
Result of throw  19 : 4 + 2 
Result of throw  20 : 3 + 2 
Result of throw  21 : 5 + 1 
Result of throw  22 : 5 + 5 
Result of throw  23 : 5 + 6 
You got your total in 23 throws!
jgchoi@matrix:~/100/workshop6> cat w6op1.c
/*
 * Course Code 		- BTP100
 * Assignment Number	- Workshop6
 * Name			- Jung Geon Choi
 * File name		- w6op1
 * Due date		- Oct.28, 2013
 * Card Draw : You win if you get your goal with less draw!
 */

#include <stdio.h>
#include <stdlib.h>
#include <time.h>

char get_suit();
char get_rank();
void draw_card(char *p_suit,char *p_rank);

main()
{
	//title
	printf("Card Draw\n"
	       "=========\n");
		   
	//valuables
	int repeat=0;
	char suit=0, rank=0, goal_rank=0, goal_suit=0;
	
	//input

		goal_suit = get_suit();
		goal_rank = get_rank();

	//draw cards
	do
		{
		repeat++;	
		draw_card(&suit, &rank);
		sleep(1);
		printf("Result of draw%4d : %c%c%c\n",repeat,rank=='0'?'1':' ',rank,suit);
		}
	while(goal_suit != suit || goal_rank != rank);
	
	//Last output
	printf("You drew your card in %d draws!\n", repeat);
	

}

char get_rank() //input char (#1-10,J,Q,K) otherwise invalid
{
	//valuables
	char digit1=0, digit2=0, result=0;
	int valid_pass=0, count =0;
	
	do 
		{
		//input
		printf("Enter rank : ");
		count = scanf("%c%c", &digit1, &digit2);
		
		//validation
		if(digit1>47 && digit1<58 && digit2=='\n')
			{
			valid_pass=1;
			result = digit1;
			}
		if(digit1 == 74 || digit1 == 81 || digit1 == 75)
			{
			if(digit2 == '\n')
				{
				valid_pass=1;
				result = digit1;
				}
			}
		if(digit1 == 49 && digit2 == 48)
			{
			if(getchar()=='\n')
				{
				valid_pass=1;
				result = 48; //10=0
				}
			}
		if(valid_pass==0 )
			{
			result = 0;
			printf("*** Invalid Input ! Try Again !***\n\n");
			if(count ==2 && digit1 !='\n' && digit2 != '\n')
				{
				while(getchar()!='\n');
				}
			if(digit1 =='\n' && digit2 !='\n')
				{
				while(getchar()!='\n');
				}
			}
		}// do
	while(result==0);
	
	return result;
}

char get_suit() // input C D H S otherwise invalid
{	//valuables
	char digit1=0, digit2=0, result=0;
	int valid_pass=0, count =0;
	
	do 
		{
		
		//input
		printf("Enter suit : ");
		count = scanf("%c%c", &digit1, &digit2);
		
		//validation
		if(digit1 == 67 || digit1 == 68 || digit1==72 ||digit1==83)
			{
			if(digit2 == '\n')
				{
				valid_pass=1;
				result = digit1;
				}
			}
		if(valid_pass==0)
			{
			result = 0;
			printf("*** Invalid Input ! Try Again !***\n\n");
			if(count ==2 && digit1 !='\n' && digit2 != '\n')
				{
				while(getchar()!='\n');
				}
			if(digit1 =='\n' && digit2 !='\n')
				{
				while(getchar()!='\n');
				}
			}
		} //do
	while(result==0);
	
	return result;
}

void draw_card(char *p_suit,char *p_rank)
{
	int suit_min = 0, suit_max = 3, rank_min = 0, rank_max = 13;
	int suit=0, rank=0;

	srand(time(NULL));
	suit = suit_min + (rand()%(suit_max+1-suit_min));
	rank = rank_min + (rand()%(rank_max+1-rank_min));
	
	switch(suit)
	{
	case 0 :
		*p_suit = 'C';
		break;
	case 1 :
		*p_suit = 'D';
		break;
	case 2 :
		*p_suit = 'H';
		break;
	case 3 :
		*p_suit = 'S';
		break;
	deafult :
		;
	}
	
	switch(rank)
	{
	case 0 :
		*p_rank = 48;
		break;
	case 1 :
		*p_rank = 49;
		break;
	case 2 :
		*p_rank = 50;
		break;
	case 3 :
		*p_rank = 51;
		break;
	case 4 :
		*p_rank = 52;
		break;
	case 5 :
		*p_rank = 53;
		break;
	case 6 :
		*p_rank = 54;
		break;
	case 7 :
		*p_rank = 55;
		break;
	case 8 :
		*p_rank = 56;
		break;
	case 9 :
		*p_rank = 57;
		break;
	case 10 : // J
		*p_rank = 74;
		break;
	case 11 : // Q
		*p_rank = 75;
		break;
	case 12 : // K
		*p_rank = 81;
		break;
	}
}
jgchoi@matrix:~/100/workshop6> cc w6op1.c
jgchoi@matrix:~/100/workshop6> a.out
Card Draw
=========
Enter suit : Q
*** Invalid Input ! Try Again !***

Enter suit : H
Enter rank : 4
Result of draw   1 : 10H
Result of draw   2 : 10S
Result of draw   3 :  KH
Result of draw   4 :  2S
Result of draw   5 :  9D
Result of draw   6 :  3C
Result of draw   7 :  KS
Result of draw   8 :  2C
Result of draw   9 :  2D
Result of draw  10 :  QD
Result of draw  11 :  2C
Result of draw  12 : 10D
Result of draw  13 :  4S
Result of draw  14 :  5H
Result of draw  15 :  5C
Result of draw  16 :  KH
Result of draw  17 :  1C
Result of draw  18 :  1H
Result of draw  19 :  9C
Result of draw  20 :  4H
You drew your card in 20 draws!
jgchoi@matrix:~/100/workshop6> exit
exit

Script done on Wed 23 Oct 2013 04:38:42 PM EDT
