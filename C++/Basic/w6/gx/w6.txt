Script started on Tue 04 Mar 2014 07:12:55 PM EST
jgchoi@matrix:~/a/w6/gx> whoami
jgchoi
jgchoi@matrix:~/a/w6/gx> cat Fraction.h
//Fraction.h
//
class Fraction
	{
	int nu;
	int de;
	
	public :
		void set(int n, int d);
		void simplify();
		void display() const;
		int numerator() const;
		int denominator() const;
		
		Fraction();
		Fraction(int, int);
		Fraction & operator+=(const Fraction & f);
		
		friend bool operator==(const Fraction & a, const Fraction & b);			
	};
Fraction operator+(const Fraction & a, const Fraction & b);jgchoi@matrix:~/a/w6/gx> cat Fraction.cpp
//Fraction.cpp - Group X
//
#include <iostream>
using namespace std;

#include "Fraction.h"

Fraction operator+(const Fraction & a, const Fraction & b){
	Fraction c;	
	c=a;
	c+=b;	
	return c;
}

bool operator==(const Fraction & a, const Fraction & b){
	if(a.nu == b.nu && a.de == b.de)
		return true;
	else
		return false;
}

Fraction & Fraction::operator+=(const Fraction & f){
	int a,b,c;

	b=de;

	nu = nu * f.de;
	de = de * f.de;

	a= f.de * b;
	c= f.nu * b;

	nu = nu + c;


	simplify();

	return *this;
}

Fraction::Fraction(int a, int b){
	set(a,b);
}

Fraction::Fraction(){
	nu=0;
	de=0;
}
	
void Fraction::set(int n , int d){
 nu=n;
 de=d;
 simplify();
}
		
void Fraction::simplify(){
	//valuable : dc (divider counter), minkeep(keeping min number)  
	int dc=1, minkeep=0;
	int demi=0, numi=0;
	//case of nu = de
	if(nu == de)
	return;
	//case of de=0
	if(de == 0)
		return;

	if(nu == 0)
		return;

	//case if any numb is minus
	if(nu<0)
		{nu*=-1;numi=1;}
	if(de<0)
		{de*=-1;demi=1;}
        
		
	//set minimum number
	if(nu < de)
			minkeep = nu;
	else
			minkeep = de;

        //Trying division starting with 2
        do
        {
                dc++;
                if(nu % dc == 0 && de % dc == 0)
                {
                        nu = nu / dc;
                        de = de / dc;
                        dc = 1;
                }
        }
        while(dc<minkeep); // if divider get bigger than min value it stops
	
	//if it was minus, change back
	if(demi==1 && numi==1)
		;
	else if(demi==1)
		nu *= -1;
	else if(numi==1)
		nu *= -1;
}

void Fraction::display() const{
if(de==0)
cout << "Undefined" ;
else if(nu==0)
cout << 0 ;
else
cout << nu << "/" << de ;
}
jgchoi@matrix:~/a/w6/gx> g++ -o w6 w6.cpp Fraction.cpp
jgchoi@matrix:~/a/w6/gx> w6
Fraction Calculator
===================
Enter Left Operand : 
 Numerator : 1
 Denominator : 6
Enter Right Operand : 
 Numerator : 1
 Denominator : 3
Result : 
1/6 + 1/3 = 1/2
Enter 2nd Right Operand : 
 Numerator : 1
 Denominator : 3
Result : 
1/2 += 1/3 => 5/6
Enter Reference : 
 Numerator : 10
 Denominator : 12
Result == Reference
jgchoi@matrix:~/a/w6/gx> exit
exit

Script done on Tue 04 Mar 2014 07:13:27 PM EST
