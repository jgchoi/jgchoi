Script started on Sun 02 Feb 2014 03:50:08 AM EST
jgchoi@matrix:~/a/w4> whoami
jgchoi
jgchoi@matrix:~/a/w4> s[Kcat w4.cpp CreditCard.cpp CreditCard.c[Kh
// w4.cpp
//
#include <iostream>
#include <iomanip>
#include <cstring>

using namespace std;

#include "CreditCard.h"

int main() {
     CreditCard card(4510516545457780, "John Doe"), empty;
     double x;
     char option;

     do {
         cout << "Select (C, P or Q) : ";
         cin >> option;
         switch (option) {
         case 'C':
         case 'c':
             cout << "Charge : ";
             cin >> x;
             card.charge(x);
             break;
         case 'P':
         case 'p':
             cout << "Payment : ";
             cin >> x;
             card.pay(x);
             break;
         }
     } while (option != 'Q' && option != 'q');

     cout << "Number  " << card.number()  << endl;
     cout << "Name    " << card.name()    << endl;
     cout << "Balance " << card.balance() << endl;

     cout << "Number  " << empty.number()  << endl;
     cout << "Name    " << empty.name()    << endl;
     cout << "Balance " << empty.balance() << endl;
 }//CreditCard.cpp
//
#include <iostream>
#include <iomanip>
#include <cstring>

using namespace std;

#include "CreditCard.h"

void CreditCard::charge(double c){
	if(c < 0) //if c is negative 
		{
		cout << "*** amount must be more than 0. Try Again" << endl;
		}
	else
		bal = bal + c;
}
	
void CreditCard::pay(double p){
	if(p < 0)
		{
		cout << "*** amount must be more than 0. Try Again" << endl;
		}
	else
	bal = bal - p;
}

long long CreditCard::number() const{
	return cardNum;
}

double CreditCard::balance() const{
	return bal;
}

const char * CreditCard::name() const{
	return cardHolder;
}

CreditCard::CreditCard(){
	strcpy(cardHolder,"\0");
	cardNum = 0;
	bal = 0;	
}


CreditCard::CreditCard(long long int num, char * name){
	strcpy(cardHolder, name);
	nameValidation(); // validation (if fails set to 0)
	
	cardNum = num;
	numValidation(); // validation (if fails set to 0)
	bal = 0;
}

void CreditCard::numValidation(){
	int digit[16];
	long long num = cardNum;
	int sum=0;
	int i;
	
	for(i=15;i>=0;i--) //num to digit
		{
		digit[i]=num%10;
		num = num/10;
		}
		
	for(i=0;i<15;i=i+2)  // double and -9 if more than 9, 1,3,5,7digits..
		{
		digit[i] = digit[i]*2;
		if(digit[i]>9)
			digit[i] = digit[i]-9;
		sum = sum + digit[i];

		}
	
	for(i=1;i<16;i=i+2) // add least of digits
		{		
		sum = sum + digit[i];

		}
		


	if(sum%10 != 0) // if it is not dividable by 10, it's wrong card number
		{
		cardNum = 0;
		}
}

void CreditCard::nameValidation(){
int i;
	for(i=0 ; i < 22 ; i++ )
	{
		if(cardHolder[i] == '\0') // 
			{
			break; // if \0 found in between 0~20, do nothing
			}
		else if(i == 21 && cardHolder[i] != '\0') //if there was no \0 in 0~20 and when i==21 with char[21] != \0 then
			{
			strcpy(cardHolder,"\0");
			}
	}
}
//CreditCard.h  w/ validation
//
class CreditCard {
	long long int cardNum;
	char cardHolder[21];
	double bal;
	
	public : 
		//constructors
		CreditCard();
		CreditCard(long long int num, char * name);
		
		//memberfunctions
		void charge(double c);
		void pay(double p);
		long long number() const;
		double balance() const;
		const char * name() const;
		
		//validation
		void numValidation();
		void nameValidation();
		};
		jgchoi@matrix:~/a/w4> g++ w4.cpp CreditCard.cpp
w4.cpp: In function â€˜int main()â€™:
w4.cpp:12:50: warning: deprecated conversion from string constant to â€˜char*â€™ [-Wwrite-strings]
jgchoi@matrix:~/a/w4> a.out
Select (C, P or Q) : c
Charge : -5
*** amount must be more than 0. Try Again
Select (C, P or Q) : c
Charge : 45.32
Select (C, P or Q) : c
Charge : 7.45
Select (C, P or Q) : c
Charge : 105.46
Select (C, P or Q) : p
Payment : 0
Select (C, P or Q) : p
Payment : -5
*** amount must be more than 0. Try Again
Select (C, P or Q) : c
Charge : 87.50
Select (C, P or Q) : q
Number  4510516545457780
Name    John Doe
Balance 245.73
Number  0
Name    
Balance 0
jgchoi@matrix:~/a/w4> exit
exit

Script done on Sun 02 Feb 2014 03:51:32 AM EST
