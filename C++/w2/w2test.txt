Script started on Sat 18 Jan 2014 09:50:04 PM EST
jgchoi@matrix:~/a/w2> whoami
jgchoi
jgchoi@matrix:~/a/w2> cat w2.cpp Fraction.h Fraction.cpp
// Workshop 2 - Fraction Simplifier
// w2.cpp

 #include <iostream>
 using namespace std;
 
 #include "Fraction.h"

 int unitTests(Fraction* f) {

   cout << "Fraction Simplifier Tests" << endl; 
     cout << "=========================" << endl;
	int result[5]={0};
	int i=0;
	
	
	//test1
     f->set(4,16); // input 4 and 16
	 if(f->numerator()==1 && f->denominator()==4) //should be 1 and 4
		{
			cout << "Test 1 Passed" << endl;
			cout << "Input : 4/16" << endl;
			cout << "Output: "; f->display();
			cout << endl;
			result[0]=1;
		}
	//test2
     f->set(-4,16); //-4, 16
	 if(f->numerator()==-1 && f->denominator()==4) //should be -1 and 4
		{
			cout << "Test 2 Passed" << endl;
			cout << "Input : -4/16" << endl;
			cout << "Output: "; f->display();
			cout << endl;
			result[1]=1;
		}
	//test3
     f->set(0,16); //0, 16
	 if(f->numerator()==0 && f->denominator()==16) //should be no change
		{
			cout << "Test 3 Passed" << endl;
			cout << "Input : 0/16" << endl;
			cout << "Output: "; f->display();
			cout << endl;
			result[2]=1;
		}
		
	//test4
     f->set(4,0); // 4, 0
	 if(f->numerator()==4 && f->denominator()==0) // should be no change
		{
			cout << "Test 4 Passed" << endl;
			cout << "Input : 4/0" << endl;
			cout << "Output: "; f->display();
			cout << endl;
			result[3]=1;
		}
	//test5
     f->set(0,0);
	 if(f->numerator()==0 && f->denominator()==0) // should be no change
		{
			cout << "Test 5 Passed" << endl;
			cout << "Input : 0/0" << endl;
			cout << "Output: "; f->display();
			cout << endl;
			result[4]=1;
		}
	//case if all test passed
	while(result[i]==1)
		{
		i++;
		if(i==5)
		return 1;
		}
		

		
	return 0; //fail to pass all test
 }

 int main() {
     Fraction fraction;
     bool passed;

     passed = unitTests(&fraction);

     if (passed)
         cout << "Passed All Tests" << endl;
     else
         cout << "Failed Tests" << endl;
 }
class Fraction
	{
	int nu;
	int de;
	
	public :
		void set(int n, int d);
		void simplify();
		void display() const;
		int numerator() const;
		int denominator() const;
	};#include <iostream>
using namespace std;

#include "Fraction.h"

void Fraction::set(int n , int d)
{
 nu=n;
 de=d;
 simplify();
}
		int Fraction::numerator() const
		{return nu;};
		int Fraction::denominator() const
		{return de;};
void Fraction::simplify()
{
        //valuable : dc (divider counter), minkeep(keeping min number)  
        int dc=1, minkeep=0;
	int demi=0, numi=0;
        //case of nu = de
        if(nu == de)
		return;
	//case of de=0
	if(de == 0)
		return;

	if(nu == 0)
		return;

	//case if any numb is minus
	if(nu<0)
		{nu*=-1;numi=1;}
	if(de<0)
		{de*=-1;demi=1;}
        
		
	//set minimum number
	if(nu < de)
			minkeep = nu;
	else
			minkeep = de;

        //Trying division starting with 2
        do
        {
                dc++;
                if(nu % dc == 0 && de % dc == 0)
                {
                        nu = nu / dc;
                        de = de / dc;
                        dc = 1;
                }
        }
        while(dc<minkeep); // if divider get bigger than min value it stops
	
	//if it was minus, change back
	if(demi==1 && numi==1)
		;
	else if(demi==1)
		nu *= -1;
	else if(numi==1)
		nu *= -1;
}





void Fraction::display() const
{
if(de==0)
cout << "Undefined" << endl;
else if(nu==0)
cout << 0 << endl;
else
cout << nu << "/" << de << endl;
}
jgchoi@matrix:~/a/w2> g++ -o w2text [K[K[Kst w2.cpp Fraction.cpp
jgchoi@matrix:~/a/w2> w2test
Fraction Simplifier Tests
=========================
Test 1 Passed
Input : 4/16
Output: 1/4

Test 2 Passed
Input : -4/16
Output: -1/4

Test 3 Passed
Input : 0/16
Output: 0

Test 4 Passed
Input : 4/0
Output: Undefined

Test 5 Passed
Input : 0/0
Output: Undefined

Passed All Tests
jgchoi@matrix:~/a/w2> exit
exit

Script done on Sat 18 Jan 2014 09:50:28 PM EST
